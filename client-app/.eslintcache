[{"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\index.js":"1","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\App.js":"2","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\config\\axios.js":"4","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\Home.jsx":"5","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\Navbar.jsx":"6","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\CarrouselProducts.jsx":"7","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\categories\\categories.jsx":"8","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\categories\\Categories.jsx":"9","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\products\\Products.jsx":"10","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\products\\UpdateProduct.jsx":"11","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\categories\\UpdateCategory.jsx":"12","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\categories\\AddCategory.jsx":"13","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\products\\AddProduct.jsx":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":1450,"mtime":1608229587066,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":118,"mtime":1608141021395,"results":"19","hashOfConfig":"16"},{"size":3185,"mtime":1608147881542,"results":"20","hashOfConfig":"16"},{"size":2971,"mtime":1608141715549,"results":"21","hashOfConfig":"16"},{"size":1168,"mtime":1608147010264,"results":"22","hashOfConfig":"16"},{"size":4032,"mtime":1608149690164,"results":"23","hashOfConfig":"16"},{"size":5472,"mtime":1608227804462,"results":"24","hashOfConfig":"16"},{"size":6187,"mtime":1608227992943,"results":"25","hashOfConfig":"16"},{"size":197,"mtime":1608215464240,"results":"26","hashOfConfig":"16"},{"size":2958,"mtime":1608228109645,"results":"27","hashOfConfig":"16"},{"size":2331,"mtime":1608227202178,"results":"28","hashOfConfig":"16"},{"size":5485,"mtime":1608234103978,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1z03k5l",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\index.js",[],["63","64"],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\App.js",[],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\config\\axios.js",[],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\Home.jsx",[],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\Navbar.jsx",[],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\CarrouselProducts.jsx",[],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\categories\\categories.jsx",["65"],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\categories\\Categories.jsx",["66"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { apiAxios } from \"../../../config/axios\";\r\n\r\n\r\nexport const Categories = () => {\r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getCategories();\r\n    }, []);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const getCategories = () => {\r\n\r\n        apiAxios\r\n            .get(\"/categories\")\r\n            .then(({ data }) => {\r\n                setCategories(data);\r\n            })\r\n            .catch((error) => console.log(error));\r\n\r\n    };\r\n\r\n    const deleteCategory = (id) => {\r\n\r\n        apiAxios\r\n            .delete(\"/categories/\" + id)\r\n            .then(({ data }) => {\r\n                console.log(data);\r\n                getCategories();\r\n            })\r\n            .catch((error) => console.log(error));\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            width: '100%',\r\n        },\r\n        container: {\r\n            padding: 30,\r\n        },\r\n        button: {\r\n            margin: 2,\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container className={classes.container} container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\">\r\n            {\r\n                categories.length > 0 ?\r\n                    <Paper className={classes.root}>\r\n                        <TableContainer >\r\n                            <Table stickyHeader aria-label=\"sticky table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>\r\n                                            ID\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            Name\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            Actions\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {categories.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((c) => {\r\n                                        return (\r\n                                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={c.id}>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {c.id}\r\n                                                </TableCell>\r\n                                                <TableCell >{c.name}</TableCell>\r\n                                                <TableCell >\r\n                                                    <Link to={`/categories/update/${c.id}`}>\r\n                                                        <Button variant=\"contained\" color=\"primary\" className={classes.button}>\r\n                                                            Update\r\n                                                            </Button>\r\n                                                    </Link>\r\n                                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => deleteCategory(c.id)} className={classes.button}>\r\n                                                        Delete\r\n                                                    </Button>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[10, 25, 100]}\r\n                            component=\"div\"\r\n                            count={categories.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onChangePage={handleChangePage}\r\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                        />\r\n\r\n                    </Paper>\r\n                    :\r\n                    <CircularProgress color=\"secondary\" />\r\n            }\r\n\r\n        </Grid>\r\n    );\r\n}\r\n","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\products\\Products.jsx",["67"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { apiAxios } from \"../../../config/axios\";\r\n\r\nexport const Products = () => {\r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [products, setProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getProducts();\r\n    }, []);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const getProducts = () => {\r\n\r\n        apiAxios\r\n            .get(\"/products\")\r\n            .then(({ data }) => {\r\n                setProducts(data);\r\n            })\r\n            .catch((error) => console.log(error));\r\n\r\n    };\r\n\r\n    const deleteProduct = (id) => {\r\n\r\n        apiAxios\r\n            .delete(\"/products/\" + id)\r\n            .then(({ data }) => {\r\n                console.log(data);\r\n                getProducts();\r\n            })\r\n            .catch((error) => console.log(error));\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            width: '100%',\r\n        },\r\n        container: {\r\n            padding: 30,\r\n        },\r\n        button: {\r\n            margin: 2,\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container className={classes.container} container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\">\r\n            {\r\n                products.length > 0 ?\r\n\r\n                    <Paper className={classes.root}>\r\n                        <TableContainer >\r\n                            <Table stickyHeader aria-label=\"sticky table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>\r\n                                            ID\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            Title\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            Descripcion\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            Category\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            Price\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            Actions\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((p) => {\r\n                                        return (\r\n                                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={p.id}>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {p.id}\r\n                                                </TableCell>\r\n                                                <TableCell >{p.title}</TableCell>\r\n                                                <TableCell >{p.description}</TableCell>\r\n                                                <TableCell >{p.category.name}</TableCell>\r\n                                                <TableCell >${p.price}</TableCell>\r\n                                                <TableCell >\r\n                                                    <Link to={`/products/update/${p.id}`}>\r\n                                                        <Button variant=\"contained\" color=\"primary\" className={classes.button}>\r\n                                                            Update\r\n                                                        </Button>\r\n                                                    </Link>\r\n                                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => deleteProduct(p.id)} className={classes.button}>\r\n                                                        Delete\r\n                                                    </Button>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[10, 25, 100]}\r\n                            component=\"div\"\r\n                            count={products.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onChangePage={handleChangePage}\r\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                        />\r\n\r\n                    </Paper>\r\n                    :\r\n                    <CircularProgress color=\"secondary\" />\r\n            }\r\n        </Grid>\r\n    );\r\n}\r\n","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\products\\UpdateProduct.jsx",[],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\categories\\UpdateCategory.jsx",["68","69"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport { apiAxios } from \"../../../config/axios\";\r\n\r\nexport const UpdateCategory = () => {\r\n\r\n    const [category, setCategory] = useState({});\r\n\r\n    useEffect(() => {\r\n        getCategory();\r\n    }, []);\r\n\r\n    const { id } = useParams();\r\n\r\n    const getCategory = () => {\r\n\r\n        apiAxios\r\n            .get(\"/categories/\" + id)\r\n            .then(({ data }) => {\r\n                setCategory(data);\r\n            })\r\n            .catch((error) => console.log(error));\r\n\r\n    }\r\n\r\n    const handleChange = async e => {\r\n        const { name, value } = e.target;\r\n\r\n        setCategory(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        apiAxios\r\n            .patch(\"/categories/\" + id, category)\r\n            .then(({ data }) => {\r\n                alert(data);\r\n            })\r\n            .catch((error) => console.log(error));\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            width: '50%',\r\n            padding: '20px',\r\n        },\r\n        container: {\r\n            padding: 30,\r\n        },\r\n        button: {\r\n            marginTop: '1rem',\r\n        },\r\n        input: {\r\n            width: '100%',\r\n        },\r\n        form: {\r\n            width: '100%',\r\n            marginTop: '1rem',\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        < Grid container className={classes.container} container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\" >\r\n            {\r\n                Object.entries(category).length !== 0 ? (\r\n\r\n                    <Paper className={classes.root}>\r\n                        <Box fontWeight=\"700\" fontSize={32} m={1}>\r\n                            Update Category\r\n                        </Box>\r\n\r\n                        <form className={classes.form} noValidate autoComplete=\"off\">\r\n                            <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" name=\"name\" className={classes.input} value={category.name} onChange={handleChange} />\r\n                            <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={handleSubmit}>\r\n                                Update\r\n                            </Button>\r\n                        </form>\r\n\r\n                    </Paper>\r\n\r\n                )\r\n                    :\r\n                    <CircularProgress color=\"secondary\" />\r\n            }\r\n\r\n        </Grid >\r\n    )\r\n}","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\categories\\AddCategory.jsx",["70"],"import React, { useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { apiAxios } from \"../../../config/axios\";\r\n\r\nexport const AddCategory = () => {\r\n\r\n    const [category, setCategory] = useState({});\r\n    const history = useHistory();\r\n\r\n    const handleChange = async e => {\r\n        const { name, value } = e.target;\r\n\r\n        setCategory(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        apiAxios\r\n            .post(\"/categories\", category)\r\n            .then(({ data }) => {\r\n                console.log(data);\r\n                history.push('/categories');\r\n            })\r\n            .catch((error) => console.log(error));\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            width: '50%',\r\n            padding: '20px',\r\n        },\r\n        container: {\r\n            padding: 30,\r\n        },\r\n        button: {\r\n            marginTop: '1rem',\r\n        },\r\n        input: {\r\n            width: '100%',\r\n        },\r\n        form: {\r\n            width: '100%',\r\n            marginTop: '1rem',\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        < Grid container className={classes.container} container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\" >\r\n\r\n            <Paper className={classes.root}>\r\n                <Box fontWeight=\"700\" fontSize={32} m={1}>\r\n                    Add Category\r\n                </Box>\r\n\r\n                <form className={classes.form} noValidate autoComplete=\"off\">\r\n                    <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" name=\"name\" className={classes.input} value={category.name} onChange={handleChange} />\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={handleSubmit}>\r\n                        Add\r\n                    </Button>\r\n                </form>\r\n\r\n            </Paper>\r\n\r\n        </Grid >\r\n    )\r\n}","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\products\\AddProduct.jsx",["71","72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":3,"column":7,"nodeType":"80","messageId":"81","endLine":3,"endColumn":17},{"ruleId":"82","severity":1,"message":"83","line":74,"column":55,"nodeType":"84","endLine":74,"endColumn":64},{"ruleId":"82","severity":1,"message":"83","line":73,"column":55,"nodeType":"84","endLine":73,"endColumn":64},{"ruleId":"85","severity":1,"message":"86","line":18,"column":8,"nodeType":"87","endLine":18,"endColumn":10,"suggestions":"88"},{"ruleId":"82","severity":1,"message":"83","line":75,"column":56,"nodeType":"84","endLine":75,"endColumn":65},{"ruleId":"82","severity":1,"message":"83","line":59,"column":56,"nodeType":"84","endLine":59,"endColumn":65},{"ruleId":"82","severity":1,"message":"83","line":78,"column":55,"nodeType":"84","endLine":78,"endColumn":64},{"ruleId":"82","severity":1,"message":"83","line":119,"column":81,"nodeType":"84","endLine":119,"endColumn":96},{"ruleId":"82","severity":1,"message":"83","line":121,"column":65,"nodeType":"84","endLine":121,"endColumn":91},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'categories' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCategory'. Either include it or remove the dependency array.","ArrayExpression",["91"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [getCategory]",{"range":"94","text":"95"},[659,661],"[getCategory]"]