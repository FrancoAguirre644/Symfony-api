[{"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\index.js":"1","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\App.js":"2","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\config\\axios.js":"4","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\Home.jsx":"5","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\CarrouselProducts.jsx":"6","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\categories\\categories.jsx":"7","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\categories\\Categories.jsx":"8","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\products\\Products.jsx":"9","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\products\\UpdateProduct.jsx":"10","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\categories\\UpdateCategory.jsx":"11","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\categories\\AddCategory.jsx":"12","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\products\\AddProduct.jsx":"13","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\customers\\Customers.jsx":"14","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\customers\\AddCustomer.jsx":"15","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\navbar\\Navbar.jsx":"16","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\navbar\\toolbar\\Toolbar.jsx":"17","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\navbar\\drawer\\Drawer.jsx":"18","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\carts\\Carts.jsx":"19","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\customers\\UpdateCustomer.jsx":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":2080,"mtime":1608495663160,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":118,"mtime":1608141021395,"results":"25","hashOfConfig":"22"},{"size":3185,"mtime":1608147881542,"results":"26","hashOfConfig":"22"},{"size":1168,"mtime":1608147010264,"results":"27","hashOfConfig":"22"},{"size":4032,"mtime":1608149690164,"results":"28","hashOfConfig":"22"},{"size":6311,"mtime":1608497990215,"results":"29","hashOfConfig":"22"},{"size":7081,"mtime":1608497931623,"results":"30","hashOfConfig":"22"},{"size":5898,"mtime":1608494963073,"results":"31","hashOfConfig":"22"},{"size":3312,"mtime":1608496488444,"results":"32","hashOfConfig":"22"},{"size":2504,"mtime":1608496961199,"results":"33","hashOfConfig":"22"},{"size":5451,"mtime":1608496895337,"results":"34","hashOfConfig":"22"},{"size":7111,"mtime":1608497886601,"results":"35","hashOfConfig":"22"},{"size":3393,"mtime":1608496999403,"results":"36","hashOfConfig":"22"},{"size":760,"mtime":1608400824613,"results":"37","hashOfConfig":"22"},{"size":9507,"mtime":1608412762740,"results":"38","hashOfConfig":"22"},{"size":3749,"mtime":1608412402902,"results":"39","hashOfConfig":"22"},{"size":7214,"mtime":1608413218502,"results":"40","hashOfConfig":"22"},{"size":4041,"mtime":1608496845781,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1z03k5l",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\index.js",[],["85","86"],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\App.js",[],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\config\\axios.js",[],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\Home.jsx",[],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\CarrouselProducts.jsx",[],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\categories\\categories.jsx",["87"],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\categories\\Categories.jsx",["88"],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\products\\Products.jsx",["89","90"],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\products\\UpdateProduct.jsx",["91","92","93","94"],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\categories\\UpdateCategory.jsx",["95","96","97","98"],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\categories\\AddCategory.jsx",["99","100","101"],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\products\\AddProduct.jsx",["102","103","104"],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\customers\\Customers.jsx",["105","106","107"],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\customers\\AddCustomer.jsx",["108","109","110","111"],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\navbar\\Navbar.jsx",[],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\navbar\\toolbar\\Toolbar.jsx",["112"],"import React from \"react\";\r\nimport { fade, makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst styles = theme => ({\r\n    grow: {\r\n        flexGrow: 1\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    title: {\r\n        display: \"none\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            display: \"block\"\r\n        }\r\n    },\r\n    search: {\r\n        position: \"relative\",\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        \"&:hover\": {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25)\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: \"100%\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: \"auto\"\r\n        }\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing(7),\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        pointerEvents: \"none\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    },\r\n    appBar: {\r\n        backgroundColor: \"#000000\",\r\n    },\r\n    inputRoot: {\r\n        color: \"inherit\"\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 7),\r\n        transition: theme.transitions.create(\"width\"),\r\n        width: \"100%\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: 200\r\n        }\r\n    },\r\n    sectionDesktop: {\r\n        display: \"none\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            display: \"flex\"\r\n        }\r\n    },\r\n    sectionMobile: {\r\n        display: \"flex\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            display: \"none\"\r\n        }\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: '#FFFFFF',\r\n    }\r\n});\r\n\r\nclass ToolbarComponent extends React.Component {\r\n    state = {\r\n        achorEl: false,\r\n        MobileMoreAnchorEl: false\r\n    };\r\n\r\n    handleProfileMenuOpen = event => {\r\n        this.setState({\r\n            achorEl: event.currentTarget\r\n        });\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({\r\n            mobileMoreAnchorEl: null\r\n        });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({\r\n            achorEl: null,\r\n            mobileMoreAnchorEl: null\r\n        });\r\n    };\r\n\r\n    handleMobileMenuOpen = event => {\r\n        this.setState({\r\n            mobileMoreAnchorEl: event.currentTarget\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const isMenuOpen = Boolean(this.state.anchorEl);\r\n        const isMobileMenuOpen = Boolean(this.state.mobileMoreAnchorEl);\r\n\r\n        const menuId = \"primary-search-account-menu\";\r\n        const renderMenu = (\r\n            <Menu\r\n                anchorEl={this.state.anchorEl}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n                id={menuId}\r\n                keepMounted\r\n                transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n                open={isMenuOpen}\r\n                onClose={this.handleMenuClose}\r\n            >\r\n                <MenuItem onClick={this.handleMenuClose}>Profile</MenuItem>\r\n                <MenuItem onClick={this.handleMenuClose}>My account</MenuItem>\r\n            </Menu>\r\n        );\r\n\r\n        const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n        const renderMobileMenu = (\r\n            <Menu\r\n                anchorEl={this.state.mobileMoreAnchorEl}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n                id={mobileMenuId}\r\n                keepMounted\r\n                transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n                open={isMobileMenuOpen}\r\n                onClose={this.handleMobileMenuClose}\r\n            >\r\n                <MenuItem>\r\n                    <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                        <Badge badgeContent={4} color=\"secondary\">\r\n                            <MailIcon />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    <p>Messages</p>\r\n                </MenuItem>\r\n                <MenuItem>\r\n                    <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                        <Badge badgeContent={11} color=\"secondary\">\r\n                            <NotificationsIcon />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    <p>Notifications</p>\r\n                </MenuItem>\r\n                <MenuItem onClick={this.handleProfileMenuOpen}>\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-controls=\"primary-search-account-menu\"\r\n                        aria-haspopup=\"true\"\r\n                        color=\"inherit\"\r\n                    >\r\n                        <AccountCircle />\r\n                    </IconButton>\r\n                    <p>Profile</p>\r\n                </MenuItem>\r\n            </Menu>\r\n        );\r\n\r\n        return (\r\n            <div className={classes.grow}>\r\n                <AppBar position=\"static\" color=\"primary\" className={classes.appBar} >\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            className={classes.menuButton}\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={this.props.openDrawerHandler}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Link to={\"/\"} className={classes.link} >\r\n                            <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                                Material-UI\r\n                            </Typography>\r\n                        </Link>\r\n                        <div className={classes.search}>\r\n                            <div className={classes.searchIcon}>\r\n                                <SearchIcon />\r\n                            </div>\r\n                            <InputBase\r\n                                placeholder=\"Search…\"\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput\r\n                                }}\r\n                                inputProps={{ \"aria-label\": \"search\" }}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.grow} />\r\n                        <div className={classes.sectionDesktop}>\r\n                            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                                <Badge badgeContent={4} color=\"secondary\">\r\n                                    <MailIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                            <IconButton\r\n                                aria-label=\"show 17 new notifications\"\r\n                                color=\"inherit\"\r\n                            >\r\n                                <Badge badgeContent={17} color=\"secondary\">\r\n                                    <NotificationsIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls={menuId}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={this.handleProfileMenuOpen}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <AccountCircle />\r\n                            </IconButton>\r\n                        </div>\r\n                        <div className={classes.sectionMobile}>\r\n                            <IconButton\r\n                                aria-label=\"show more\"\r\n                                aria-controls={mobileMenuId}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={this.handleMobileMenuOpen}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <MoreIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                {renderMobileMenu}\r\n                {renderMenu}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ToolbarComponent);\r\n","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\navbar\\drawer\\Drawer.jsx",[],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\carts\\Carts.jsx",["113"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { apiAxios } from \"../../../config/axios\";\r\n\r\n\r\nexport const Carts = () => {\r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [carts, setCarts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getCarts();\r\n    }, []);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const getCarts = () => {\r\n\r\n        apiAxios\r\n            .get(\"/carts\")\r\n            .then(({ data }) => {\r\n                console.log(data);\r\n                setCarts(data);\r\n            })\r\n            .catch((error) => console.log(error));\r\n\r\n    };\r\n\r\n    const deleteCart = (idCustomer, idCart) => {\r\n\r\n        apiAxios\r\n            .delete(\"/customers/\" + idCustomer + \"/cart/\" + idCart)\r\n            .then(({ data }) => {\r\n                console.log(data);\r\n                getCarts();\r\n            })\r\n            .catch((error) => console.log(error));\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            width: '100%',\r\n        },\r\n        container: {\r\n            padding: 30,\r\n        },\r\n        button: {\r\n            margin: 2,\r\n        },\r\n        image: {\r\n            height: 30,\r\n            marginRight: 10,\r\n        },\r\n        img: {\r\n            display: 'block',\r\n            maxWidth: '100%',\r\n            maxHeight: '100%',\r\n            marginRight: 4,\r\n        },\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container className={classes.container} container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\">\r\n            {\r\n                carts.length > 0 ?\r\n                    <Paper className={classes.root}>\r\n                        <TableContainer >\r\n                            <Table stickyHeader aria-label=\"sticky table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>\r\n                                            ID\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            Date\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            Customer\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            Products\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            Total\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            Actions\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {carts.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((c) => {\r\n                                        return (\r\n                                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={c.id}>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {c.id}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {c.dateTime}\r\n                                                </TableCell>\r\n                                                <TableCell >{c.customer.name} {c.customer.lastName} </TableCell>\r\n                                                <TableCell >\r\n                                                    {c.products.map((p) => {\r\n                                                        return (<ButtonBase className={classes.image}>\r\n                                                            <img className={classes.img} alt=\"complex\" src=\"https://i.ytimg.com/vi/aWttx80Uflk/hqdefault.jpg\" />\r\n                                                            {p.description} • ${p.price}</ButtonBase>)\r\n                                                    })}\r\n                                                </TableCell>\r\n                                                <TableCell > ${c.total}</TableCell>\r\n                                                <TableCell >\r\n                                                    <Link to={`/categories/update/${c.id}`}>\r\n                                                        <Button variant=\"contained\" color=\"primary\" className={classes.button}>\r\n                                                            Update\r\n                                                            </Button>\r\n                                                    </Link>\r\n                                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => deleteCart(c.customer.id, c.id)} className={classes.button}>\r\n                                                        Delete\r\n                                                    </Button>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[10, 25, 100]}\r\n                            component=\"div\"\r\n                            count={carts.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onChangePage={handleChangePage}\r\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                        />\r\n\r\n                    </Paper>\r\n                    :\r\n                    <CircularProgress color=\"secondary\" />\r\n            }\r\n\r\n        </Grid >\r\n    );\r\n}\r\n","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\customers\\UpdateCustomer.jsx",["114","115","116","117","118"],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":3,"column":7,"nodeType":"125","messageId":"126","endLine":3,"endColumn":17},{"ruleId":"127","severity":1,"message":"128","line":85,"column":55,"nodeType":"129","endLine":85,"endColumn":64},{"ruleId":"127","severity":1,"message":"128","line":84,"column":55,"nodeType":"129","endLine":84,"endColumn":64},{"ruleId":"127","severity":1,"message":"128","line":98,"column":33,"nodeType":"129","endLine":98,"endColumn":57},{"ruleId":"130","severity":1,"message":"131","line":28,"column":8,"nodeType":"132","endLine":28,"endColumn":10,"suggestions":"133"},{"ruleId":"127","severity":1,"message":"128","line":89,"column":56,"nodeType":"129","endLine":89,"endColumn":65},{"ruleId":"127","severity":1,"message":"128","line":129,"column":81,"nodeType":"129","endLine":129,"endColumn":96},{"ruleId":"127","severity":1,"message":"128","line":131,"column":68,"nodeType":"129","endLine":131,"endColumn":94},{"ruleId":"130","severity":1,"message":"134","line":21,"column":8,"nodeType":"132","endLine":21,"endColumn":10,"suggestions":"135"},{"ruleId":"127","severity":1,"message":"128","line":77,"column":56,"nodeType":"129","endLine":77,"endColumn":65},{"ruleId":"127","severity":1,"message":"128","line":91,"column":73,"nodeType":"129","endLine":91,"endColumn":88},{"ruleId":"127","severity":1,"message":"128","line":93,"column":60,"nodeType":"129","endLine":93,"endColumn":86},{"ruleId":"127","severity":1,"message":"128","line":60,"column":56,"nodeType":"129","endLine":60,"endColumn":65},{"ruleId":"127","severity":1,"message":"128","line":72,"column":65,"nodeType":"129","endLine":72,"endColumn":80},{"ruleId":"127","severity":1,"message":"128","line":74,"column":49,"nodeType":"129","endLine":74,"endColumn":75},{"ruleId":"127","severity":1,"message":"128","line":76,"column":55,"nodeType":"129","endLine":76,"endColumn":64},{"ruleId":"127","severity":1,"message":"128","line":117,"column":81,"nodeType":"129","endLine":117,"endColumn":96},{"ruleId":"127","severity":1,"message":"128","line":119,"column":65,"nodeType":"129","endLine":119,"endColumn":91},{"ruleId":"127","severity":1,"message":"128","line":84,"column":55,"nodeType":"129","endLine":84,"endColumn":64},{"ruleId":"127","severity":1,"message":"128","line":98,"column":33,"nodeType":"129","endLine":98,"endColumn":57},{"ruleId":"127","severity":1,"message":"128","line":140,"column":128,"nodeType":"129","endLine":140,"endColumn":152},{"ruleId":"123","severity":1,"message":"136","line":1,"column":27,"nodeType":"125","messageId":"126","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"128","line":56,"column":55,"nodeType":"129","endLine":56,"endColumn":64},{"ruleId":"127","severity":1,"message":"128","line":79,"column":73,"nodeType":"129","endLine":79,"endColumn":88},{"ruleId":"127","severity":1,"message":"128","line":81,"column":57,"nodeType":"129","endLine":81,"endColumn":83},{"ruleId":"123","severity":1,"message":"137","line":2,"column":16,"nodeType":"125","messageId":"126","endLine":2,"endColumn":26},{"ruleId":"127","severity":1,"message":"128","line":86,"column":55,"nodeType":"129","endLine":86,"endColumn":64},{"ruleId":"123","severity":1,"message":"138","line":18,"column":11,"nodeType":"125","messageId":"126","endLine":18,"endColumn":18},{"ruleId":"130","severity":1,"message":"139","line":22,"column":8,"nodeType":"132","endLine":22,"endColumn":10,"suggestions":"140"},{"ruleId":"127","severity":1,"message":"128","line":64,"column":55,"nodeType":"129","endLine":64,"endColumn":64},{"ruleId":"127","severity":1,"message":"128","line":89,"column":81,"nodeType":"129","endLine":89,"endColumn":96},{"ruleId":"127","severity":1,"message":"128","line":91,"column":68,"nodeType":"129","endLine":91,"endColumn":94},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'categories' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProduct'. Either include it or remove the dependency array.","ArrayExpression",["143"],"React Hook useEffect has a missing dependency: 'getCategory'. Either include it or remove the dependency array.",["144"],"'useEffect' is defined but never used.","'makeStyles' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCustomer'. Either include it or remove the dependency array.",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [getProduct]",{"range":"152","text":"153"},"Update the dependencies array to be: [getCategory]",{"range":"154","text":"155"},"Update the dependencies array to be: [getCustomer]",{"range":"156","text":"157"},[1085,1087],"[getProduct]",[795,797],"[getCategory]",[797,799],"[getCustomer]"]