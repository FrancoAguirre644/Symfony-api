[{"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\index.js":"1","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\App.js":"2","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\config\\axios.js":"4","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\Home.jsx":"5","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\Navbar.jsx":"6","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\CarrouselProducts.jsx":"7","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\categories\\categories.jsx":"8","C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\categories\\Categories.jsx":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":597,"mtime":1608148127405,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":118,"mtime":1608141021395,"results":"14","hashOfConfig":"11"},{"size":3185,"mtime":1608147881542,"results":"15","hashOfConfig":"11"},{"size":2971,"mtime":1608141715549,"results":"16","hashOfConfig":"11"},{"size":1168,"mtime":1608147010264,"results":"17","hashOfConfig":"11"},{"size":4032,"mtime":1608149690164,"results":"18","hashOfConfig":"11"},{"size":4032,"mtime":1608149690164,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1z03k5l",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\index.js",[],["40","41"],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\App.js",[],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\config\\axios.js",[],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\Home.jsx",[],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\Navbar.jsx",[],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\CarrouselProducts.jsx",[],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\categories\\categories.jsx",["42"],"C:\\xampp\\htdocs\\symfony_api\\client-app\\src\\components\\crud\\categories\\Categories.jsx",["43"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { apiAxios } from \"../../../config/axios\";\r\n\r\n\r\nexport const Categories = () => {\r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getCategories();\r\n    }, []);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const getCategories = () => {\r\n\r\n        apiAxios\r\n            .get(\"/categories\")\r\n            .then(({ data }) => {\r\n                setCategories(data);\r\n            })\r\n            .catch((error) => console.log(error));\r\n\r\n    };\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            width: '100%',\r\n        },\r\n        container: {\r\n            padding: 30,\r\n        },\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container className={classes.container} container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\">\r\n            {\r\n                categories.length > 0 ?\r\n\r\n                    <Paper className={classes.root}>\r\n                        <TableContainer >\r\n                            <Table stickyHeader aria-label=\"sticky table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>\r\n                                            ID\r\n                                </TableCell>\r\n                                        <TableCell>\r\n                                            Name\r\n                                </TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {categories.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((c) => {\r\n                                        return (\r\n                                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={c.id}>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {c.id}\r\n                                                </TableCell>\r\n                                                <TableCell >{c.name}</TableCell>\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[10, 25, 100]}\r\n                            component=\"div\"\r\n                            count={categories.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onChangePage={handleChangePage}\r\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                        />\r\n\r\n                    </Paper>\r\n                    :\r\n                    <CircularProgress color=\"secondary\" />\r\n            }\r\n        </Grid>\r\n    );\r\n}\r\n",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":3,"column":7,"nodeType":"50","messageId":"51","endLine":3,"endColumn":17},{"ruleId":"52","severity":1,"message":"53","line":58,"column":55,"nodeType":"54","endLine":58,"endColumn":64},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'categories' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]